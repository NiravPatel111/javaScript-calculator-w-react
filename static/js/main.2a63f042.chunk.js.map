{"version":3,"sources":["App.js","Components/Button.jsx","Components/Display.jsx","serviceWorker.js","index.js"],"names":["isOperator","endsWithOperator","endsWithNum","endsWithSubtract","endsWithDecimal","App","props","_this","Object","C_Users_nirav_OneDrive_Desktop_mycalculator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_nirav_OneDrive_Desktop_mycalculator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_nirav_OneDrive_Desktop_mycalculator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","currentVal","formula","evaluated","initialize","bind","C_Users_nirav_OneDrive_Desktop_mycalculator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","handleNumber","handleOperators","handleEvaluate","handleDecimal","handleNegative","setState","preExpression","e","target","value","length","test","slice","includes","answer","Math","round","eval","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","_Components_Display__WEBPACK_IMPORTED_MODULE_9__","currentValue","_Components_Button__WEBPACK_IMPORTED_MODULE_8__","numbers","operators","decimal","evaluate","negative","React","Component","Button","react__WEBPACK_IMPORTED_MODULE_5___default","id","onClick","Display","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a63f042.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Button from './Components/Button';\nimport Display from './Components/Display';\n\nconst isOperator = /[*/+%-]/,\n  endsWithOperator = /[*+/%-]$/,\n  endsWithNum = /[0123456789]$/,\n  endsWithSubtract = /[-]$/,\n  endsWithDecimal = /['.']$/;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentVal: '0',\n      formula: '',\n      evaluated: ''\n    };\n    this.initialize = this.initialize.bind(this);\n    this.handleNumber = this.handleNumber.bind(this);\n    this.handleOperators = this.handleOperators.bind(this);\n    this.handleEvaluate = this.handleEvaluate.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.handleNegative = this.handleNegative.bind(this);\n  }\n\n  initialize() {\n    this.setState({\n      currentVal: '0',\n      preExpression: '',\n      evaluated: ''\n    });\n  }\n  // numbers\n  handleNumber(e) {\n    if (this.state.currentVal == '0' || this.state.evaluated === true) {\n      this.setState({\n        currentVal: e.target.value,\n        evaluated: false\n      });\n    } else if (\n      this.state.currentVal.length < 14 &&\n      this.state.currentVal !== 0\n    ) {\n      this.setState({\n        currentVal: this.state.currentVal + e.target.value,\n        evaluated: false\n      });\n    }\n  }\n  // Operator\n\n  handleOperators(e) {\n    if (endsWithOperator.test(this.state.currentVal)) {\n      this.setState({\n        currentVal: this.state.currentVal.slice(0, -1) + e.target.value\n      });\n    } else if (this.state.currentVal == '0' && e.target.value.includes('-')) {\n      this.setState({\n        currentVal: e.target.value\n      });\n    } else {\n      this.setState({\n        currentVal: this.state.currentVal + e.target.value,\n        evaluated: false\n      });\n    }\n  }\n  handleEvaluate() {\n    let formula = this.state.currentVal;\n    if (endsWithOperator.test(formula)) {\n      formula = formula.slice(0, -1);\n      let answer = Math.round(1000000000000 * eval(formula)) / 1000000000000;\n      this.setState({ currentVal: answer, evaluated: true });\n    } else {\n      let answer = Math.round(1000000000000 * eval(formula)) / 1000000000000;\n      this.setState({ currentVal: answer, evaluated: true });\n    }\n  }\n  // Negative\n\n  handleNegative(e) {\n    if (\n      endsWithOperator.test(this.state.currentVal) &&\n      !endsWithSubtract.test(this.state.currentVal)\n    ) {\n      this.setState({ currentVal: this.state.currentVal + e.target.value });\n    } else if (\n      endsWithDecimal.test(this.state.currentVal) ||\n      endsWithNum.test(this.state.currentVal)\n    ) {\n      this.setState({ currentVal: this.state.currentVal * -1 });\n    }\n  }\n\n  handleDecimal() {\n    if (this.state.evaluated === true || this.state.currentVal == '0') {\n      this.setState({ currentVal: '0.', evaluated: false });\n    } else if (\n      !this.state.currentVal.includes('.') &&\n      endsWithNum.test(this.state.currentVal) &&\n      !endsWithDecimal.test(this.state.currentVal)\n    ) {\n      this.setState({\n        currentVal: this.state.currentVal + '.',\n        evaluated: false\n      });\n    } else if (\n      endsWithOperator.test(this.state.currentVal) &&\n      this.state.currentVal.includes('.') &&\n      !endsWithDecimal.test(this.state.currentVal)\n    ) {\n      this.setState({\n        currentVal: this.state.currentVal + '0.',\n        evaluated: false\n      });\n    } else if (\n      isOperator.test(this.state.currentVal) &&\n      this.state.currentVal.includes('.') &&\n      endsWithNum.test(this.state.currentVal)\n    ) {\n      this.setState({\n        currentVal: this.state.currentVal + '.',\n        evaluated: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='App'>\n          <Display currentValue={this.state.currentVal} />\n          <Button\n            initialize={this.initialize}\n            numbers={this.handleNumber}\n            operators={this.handleOperators}\n            decimal={this.handleDecimal}\n            evaluate={this.handleEvaluate}\n            negative={this.handleNegative}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          id='clear'\r\n          value='AC'\r\n          onClick={this.props.initialize}\r\n          className='clearbtn'\r\n        >\r\n          AC\r\n        </button>\r\n        <button id='modulus' value='-' onClick={this.props.negative}>\r\n          +/-\r\n        </button>\r\n        <button id='divide' value='/' onClick={this.props.operators}>\r\n          /\r\n        </button>\r\n        <button id='seven' value='7' onClick={this.props.numbers}>\r\n          7\r\n        </button>\r\n        <button id='eight' value='8' onClick={this.props.numbers}>\r\n          8\r\n        </button>\r\n        <button id='nine' value='9' onClick={this.props.numbers}>\r\n          9\r\n        </button>\r\n        <button id='multiply' value='*' onClick={this.props.operators}>\r\n          x\r\n        </button>\r\n        <button id='four' value='4' onClick={this.props.numbers}>\r\n          4\r\n        </button>\r\n        <button id='five' value='5' onClick={this.props.numbers}>\r\n          5\r\n        </button>\r\n        <button id='six' value='6' onClick={this.props.numbers}>\r\n          6\r\n        </button>\r\n        <button id='subtract' value='-' onClick={this.props.operators}>\r\n          -\r\n        </button>\r\n        <button id='one' value='1' onClick={this.props.numbers}>\r\n          1\r\n        </button>\r\n        <button id='two' value='2' onClick={this.props.numbers}>\r\n          2\r\n        </button>\r\n        <button id='three' value='3' onClick={this.props.numbers}>\r\n          3\r\n        </button>\r\n        <button id='add' value='+' onClick={this.props.operators}>\r\n          +\r\n        </button>\r\n        <button id='zero' value='0' onClick={this.props.numbers}>\r\n          0\r\n        </button>\r\n        <button id='decimal' value='.' onClick={this.props.decimal}>\r\n          .\r\n        </button>\r\n        <button id='equals' value='=' onClick={this.props.evaluate}>\r\n          =\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nclass Display extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id='display' className='screen'>\r\n        {this.props.currentValue}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}